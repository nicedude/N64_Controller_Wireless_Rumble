Archive member included because of file (symbol)

c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o (exit)
c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
                              charlie.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

charlie             0x14              charlie.o
aux_aux             0x1               nrf24L01.o
statusReg           0x1               spi.o
LED_PATTERN         0x2               charlie.o
spi_data_buffer     0x22              spi.o
data                0x22              spi.o
nrf_conf            0x3a              nrf24L01.o

Discarded input sections

 .bss           0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
 .text          0x00000000        0x0 charlie.o
 .bss           0x00000000        0x0 charlie.o
 .text.charlie_blink
                0x00000000       0x3c charlie.o
 .text          0x00000000        0x0 nrf24L01.o
 .bss           0x00000000        0x0 nrf24L01.o
 .text.nrf_rx_mode
                0x00000000       0x24 nrf24L01.o
 .text.nrf_read_fifo
                0x00000000       0x32 nrf24L01.o
 .text.nrf_get_byte
                0x00000000        0x4 nrf24L01.o
 .text.send_byte
                0x00000000        0xc nrf24L01.o
 .text          0x00000000        0x0 main.o
 .bss           0x00000000        0x0 main.o
 .text          0x00000000        0x0 spi.o
 .bss           0x00000000        0x0 spi.o
 .text.spi_get_byte
                0x00000000       0x10 spi.o
 .text.spi_read_reg
                0x00000000       0x44 spi.o
 .text          0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text          0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
LOAD charlie.o
LOAD nrf24L01.o
LOAD main.o
LOAD spi.o
START GROUP
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libm.a
END GROUP
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x664
 *(.vectors)
 .vectors       0x00000000       0x26 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table.set_charlie
                0x00000026       0x18 charlie.o
 *(.progmem*)
                0x0000003e                . = ALIGN (0x2)
                0x0000003e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000003e        0x0 linker stubs
 *(.trampolines*)
                0x0000003e                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000003e                __ctors_start = .
 *(.ctors)
                0x0000003e                __ctors_end = .
                0x0000003e                __dtors_start = .
 *(.dtors)
                0x0000003e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000003e        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
                0x0000003e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000003e        0xc c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000004a       0x10 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
                0x0000004a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000005a        0x4 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000005e        0x2 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
                0x0000005e                __vector_1
                0x0000005e                __vector_12
                0x0000005e                __bad_interrupt
                0x0000005e                __vector_6
                0x0000005e                __vector_3
                0x0000005e                __vector_11
                0x0000005e                __vector_13
                0x0000005e                __vector_17
                0x0000005e                __vector_7
                0x0000005e                __vector_5
                0x0000005e                __vector_4
                0x0000005e                __vector_2
                0x0000005e                __vector_15
                0x0000005e                __vector_8
                0x0000005e                __vector_14
                0x0000005e                __vector_10
                0x0000005e                __vector_16
                0x0000005e                __vector_18
                0x00000060                . = ALIGN (0x2)
 *(.text.*)
 .text.__vector_9
                0x00000060       0xa0 charlie.o
                0x00000060                __vector_9
 .text.setup_charlie_struct
                0x00000100       0x66 charlie.o
                0x00000100                setup_charlie_struct
 .text.setup_charlie
                0x00000166       0x1a charlie.o
                0x00000166                setup_charlie
 .text.set_charlie
                0x00000180       0xc4 charlie.o
                0x00000180                set_charlie
 .text.roll_charlie
                0x00000244       0x40 charlie.o
                0x00000244                roll_charlie
 .text.nrf_send_config
                0x00000284      0x17e nrf24L01.o
                0x00000284                nrf_send_config
 .text.nrf_reset_status
                0x00000402       0x1e nrf24L01.o
                0x00000402                nrf_reset_status
 .text.nrf_tx_mode
                0x00000420       0x20 nrf24L01.o
                0x00000420                nrf_tx_mode
 .text.nrf_basic_config
                0x00000440       0xb4 nrf24L01.o
                0x00000440                nrf_basic_config
 .text.nrf_init
                0x000004f4       0x16 nrf24L01.o
                0x000004f4                nrf_init
 .text.nrf_put_byte
                0x0000050a       0x32 nrf24L01.o
                0x0000050a                nrf_put_byte
 .text.nrf_irq_jack
                0x0000053c        0xa nrf24L01.o
                0x0000053c                nrf_irq_jack
 .text.main     0x00000546       0x4c main.o
                0x00000546                main
 .text.spi_init
                0x00000592       0x1e spi.o
                0x00000592                spi_init
 .text.spi_init_buffer
                0x000005b0        0x6 spi.o
                0x000005b0                spi_init_buffer
 .text.spi_load_byte
                0x000005b6       0x16 spi.o
                0x000005b6                spi_load_byte
 .text.spi_Read_Write
                0x000005cc       0x1e spi.o
                0x000005cc                spi_Read_Write
 .text.spi_exchange
                0x000005ea       0x76 spi.o
                0x000005ea                spi_exchange
                0x00000660                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000660        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
                0x00000660                _exit
                0x00000660                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000660        0x4 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x00000664                _etext = .

.data           0x00800060        0x0 load address 0x00000664
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x0 charlie.o
 .data          0x00800060        0x0 nrf24L01.o
 .data          0x00800060        0x0 main.o
 .data          0x00800060        0x0 spi.o
 .data          0x00800060        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060       0x9a
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.charlie_counter
                0x00800060        0x1 charlie.o
                0x00800060                charlie_counter
 .bss.ovf_count
                0x00800061        0x1 charlie.o
                0x00800061                ovf_count
 .bss.spi_counter
                0x00800062        0x1 spi.o
                0x00800062                spi_counter
 .bss.spi_pointer
                0x00800063        0x1 spi.o
                0x00800063                spi_pointer
 *(COMMON)
 COMMON         0x00800064       0x16 charlie.o
                0x00800064                charlie
                0x00800078                LED_PATTERN
 COMMON         0x0080007a       0x3b nrf24L01.o
                0x0080007a                aux_aux
                0x0080007b                nrf_conf
 COMMON         0x008000b5       0x45 spi.o
                0x008000b5                statusReg
                0x008000b6                spi_data_buffer
                0x008000d8                data
                0x008000fa                PROVIDE (__bss_end, .)
                0x00000664                __data_load_start = LOADADDR (.data)
                0x00000664                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000fa        0x0
                0x008000fa                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000fa                PROVIDE (__noinit_end, .)
                0x008000fa                _end = .
                0x008000fa                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o

.stabstr        0x00000000       0x97
 *(.stabstr)
 .stabstr       0x00000000       0x97 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x2f
 *(.comment)
 .comment       0x00000000       0x2f charlie.o
                                 0x30 (size before relaxing)
 .comment       0x00000000       0x30 nrf24L01.o
 .comment       0x00000000       0x30 main.o
 .comment       0x00000000       0x30 spi.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x128
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x48 charlie.o
 .debug_aranges
                0x00000048       0x70 nrf24L01.o
 .debug_aranges
                0x000000b8       0x20 main.o
 .debug_aranges
                0x000000d8       0x50 spi.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000     0x1433
 *(.debug_info)
 .debug_info    0x00000000      0x393 charlie.o
 .debug_info    0x00000393      0xa4c nrf24L01.o
 .debug_info    0x00000ddf      0x278 main.o
 .debug_info    0x00001057      0x3dc spi.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x765
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x1ba charlie.o
 .debug_abbrev  0x000001ba      0x2a3 nrf24L01.o
 .debug_abbrev  0x0000045d      0x13d main.o
 .debug_abbrev  0x0000059a      0x1cb spi.o

.debug_line     0x00000000      0x90f
 *(.debug_line)
 .debug_line    0x00000000      0x24f charlie.o
 .debug_line    0x0000024f      0x2d3 nrf24L01.o
 .debug_line    0x00000522      0x1b8 main.o
 .debug_line    0x000006da      0x235 spi.o

.debug_frame    0x00000000      0x270
 *(.debug_frame)
 .debug_frame   0x00000000       0xb8 charlie.o
 .debug_frame   0x000000b8       0xf0 nrf24L01.o
 .debug_frame   0x000001a8       0x24 main.o
 .debug_frame   0x000001cc       0xa4 spi.o

.debug_str      0x00000000      0x5fb
 *(.debug_str)
 .debug_str     0x00000000      0x1e2 charlie.o
                                0x22d (size before relaxing)
 .debug_str     0x000001e2      0x39b nrf24L01.o
                                0x518 (size before relaxing)
 .debug_str     0x0000057d       0x11 main.o
                                0x1ce (size before relaxing)
 .debug_str     0x0000058e       0x6d spi.o
                                0x20b (size before relaxing)

.debug_loc      0x00000000      0x653
 *(.debug_loc)
 .debug_loc     0x00000000      0x2e4 charlie.o
 .debug_loc     0x000002e4      0x1c0 nrf24L01.o
 .debug_loc     0x000004a4      0x1af spi.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000      0x118
 *(.debug_ranges)
 .debug_ranges  0x00000000       0x38 charlie.o
 .debug_ranges  0x00000038       0x60 nrf24L01.o
 .debug_ranges  0x00000098       0x10 main.o
 .debug_ranges  0x000000a8       0x70 spi.o

.debug_macro
 *(.debug_macro)
OUTPUT(NRF_N64_Basestation.elf elf32-avr)
LOAD linker stubs
